{"version":3,"sources":["../../../src/modules/project/query.js"],"names":["project","id","params","auth","rules","data","value","check","message","common","error","invalidData","Error","Project","findOne","_id","server","user","projectsByOrganization","fields","find","organizationId","select"],"mappings":";;;;;;;;;;;;;;AACA;;AACA;;AACA;;AACA;;AAJA;AAMA;SACsBA,O;;EAgCtB;;;;2FAhCO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmCC,YAAAA,EAAnC,QAAyBC,MAAzB,CAAmCD,EAAnC,EAAyCE,IAAzC,QAAyCA,IAAzC;;AAAA,iBACF,sBAAUA,IAAV,CADE;AAAA;AAAA;AAAA;;AAEH;AACMC,YAAAA,KAHH,GAGW,CACZ;AACEC,cAAAA,IAAI,EAAE;AAAEC,gBAAAA,KAAK,EAAEL;AAAT,eADR;AAEEM,cAAAA,KAAK,EAAE,UAFT;AAGEC,cAAAA,OAAO,EAAEN,mBAAOO,MAAP,CAAcD,OAAd,CAAsBE,KAAtB,CAA4BC;AAHvC,aADY,CAHX,EAWH;;AAXG;AAaD,wCAASP,KAAT;AAbC;AAAA;;AAAA;AAAA;AAAA;AAAA,kBAeK,IAAIQ,KAAJ,CAAU,YAAMJ,OAAhB,CAfL;;AAAA;AAAA;AAAA;AAAA,mBAmBkBK,kBAAQC,OAAR,CAAgB;AAAEC,cAAAA,GAAG,EAAEd;AAAP,aAAhB,CAnBlB;;AAAA;AAmBKI,YAAAA,IAnBL;AAAA,6CAqBM;AACLA,cAAAA,IAAI,EAAJA;AADK,aArBN;;AAAA;AAAA;AAAA;AAAA,kBAyBK,IAAIO,KAAJ,CAAUV,mBAAOO,MAAP,CAAcD,OAAd,CAAsBE,KAAtB,CAA4BM,MAAtC,CAzBL;;AAAA;AAAA,kBA6BC,IAAIJ,KAAJ,CAAUV,mBAAOe,IAAP,CAAYT,OAAZ,CAAoBE,KAApB,CAA0BP,IAApC,CA7BD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAiCee,sB;;;;;0GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwCC,YAAAA,MAAxC,SAAwCA,MAAxC,EAAgDhB,IAAhD,SAAgDA,IAAhD;;AAAA,iBACF,sBAAUA,IAAV,CADE;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,mBAGkBU,kBAChBO,IADgB,CACX;AAAEC,cAAAA,cAAc,EAAElB,IAAI,CAACc,IAAL,CAAUI;AAA5B,aADW,EAEhBC,MAFgB,CAETH,MAFS,CAHlB;;AAAA;AAGKd,YAAAA,IAHL;AAAA,8CAOM;AACLA,cAAAA,IAAI,EAAJA;AADK,aAPN;;AAAA;AAAA;AAAA;AAAA,kBAWK,IAAIO,KAAJ,CAAUV,mBAAOO,MAAP,CAAcD,OAAd,CAAsBE,KAAtB,CAA4BM,MAAtC,CAXL;;AAAA;AAAA,kBAeC,IAAIJ,KAAJ,CAAUV,mBAAOe,IAAP,CAAYT,OAAZ,CAAoBE,KAApB,CAA0BP,IAApC,CAfD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["// App Imports\r\nimport params from '../../setup/config/params'\r\nimport validate from '../../setup/helpers/validation'\r\nimport { authCheck } from '../../setup/helpers/utils'\r\nimport Project from './model'\r\n\r\n// Get project by ID\r\nexport async function project({ params: { id }, auth }) {\r\n  if(authCheck(auth)) {\r\n    // Validation rules\r\n    const rules = [\r\n      {\r\n        data: { value: id },\r\n        check: 'notEmpty',\r\n        message: params.common.message.error.invalidData\r\n      }\r\n    ]\r\n\r\n    // Validate\r\n    try {\r\n      validate(rules)\r\n    } catch(error) {\r\n      throw new Error(error.message)\r\n    }\r\n\r\n    try {\r\n      const data = await Project.findOne({ _id: id })\r\n\r\n      return {\r\n        data\r\n      }\r\n    } catch(error) {\r\n      throw new Error(params.common.message.error.server)\r\n    }\r\n  }\r\n\r\n  throw new Error(params.user.message.error.auth)\r\n}\r\n\r\n// Get by organization\r\nexport async function projectsByOrganization({ fields, auth }) {\r\n  if(authCheck(auth)) {\r\n    try {\r\n      const data = await Project\r\n        .find({ organizationId: auth.user.organizationId })\r\n        .select(fields)\r\n\r\n      return {\r\n        data\r\n      }\r\n    } catch(error) {\r\n      throw new Error(params.common.message.error.server)\r\n    }\r\n  }\r\n\r\n  throw new Error(params.user.message.error.auth)\r\n}\r\n"],"file":"query.js"}