{"version":3,"sources":["../../../src/modules/project/mutation.js"],"names":["projectCreate","params","name","description","auth","rules","data","value","check","message","Error","Project","create","organizationId","user","userId","_id","project","Activity","projectId","action","activity","types","common","error","server","projectUpdate","id","invalidData","updateOne","$set","projectRemove","remove"],"mappings":"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","sourcesContent":["// App Imports\r\nimport params from '../../setup/config/params'\r\nimport { authCheck } from '../../setup/helpers/utils'\r\nimport validate from '../../setup/helpers/validation'\r\nimport Activity from '../activity/model'\r\nimport Project from './model'\r\n\r\n// Create\r\nexport async function projectCreate({ params: { name, description = '' }, auth }) {\r\n  if(authCheck(auth)) {\r\n    // Validation rules\r\n    const rules = [\r\n      {\r\n        data: { value: name },\r\n        check: 'notEmpty',\r\n        message: 'Please enter valid name.'\r\n      }\r\n    ]\r\n\r\n    // Validate\r\n    try {\r\n      validate(rules)\r\n    } catch(error) {\r\n      throw new Error(error.message)\r\n    }\r\n\r\n    try {\r\n      const project = await Project.create({\r\n        organizationId: auth.user.organizationId,\r\n        userId: auth.user._id,\r\n        name,\r\n        description\r\n      })\r\n\r\n      // Log activity\r\n      if(project) {\r\n        await Activity.create({\r\n          organizationId: auth.user.organizationId,\r\n          userId: auth.user._id,\r\n          projectId: project._id,\r\n          action: params.activity.types.create,\r\n          message: `${ auth.user.name } created ${ name } project.`\r\n        })\r\n      }\r\n\r\n      return {\r\n        data: project\r\n      }\r\n    } catch(error) {\r\n      throw new Error(params.common.message.error.server)\r\n    }\r\n  }\r\n\r\n  throw new Error(params.user.message.error.auth)\r\n}\r\n\r\n// Update\r\nexport async function projectUpdate({ params: { id, name, description = '' }, auth }) {\r\n  if(authCheck(auth)) {\r\n    // Validation rules\r\n    const rules = [\r\n      {\r\n        data: { value: id },\r\n        check: 'notEmpty',\r\n        message: params.common.message.error.invalidData\r\n      },\r\n      {\r\n        data: { value: name },\r\n        check: 'notEmpty',\r\n        message: 'Please enter valid name.'\r\n      }\r\n    ]\r\n\r\n    // Validate\r\n    try {\r\n      validate(rules)\r\n    } catch(error) {\r\n      throw new Error(error.message)\r\n    }\r\n\r\n    try {\r\n      const data = await Project.updateOne(\r\n        { _id: id },\r\n        {\r\n          $set: {\r\n            name,\r\n            description\r\n          }\r\n        }\r\n      )\r\n\r\n      return {\r\n        data\r\n      }\r\n    } catch(error) {\r\n      throw new Error(params.common.message.error.server)\r\n    }\r\n  }\r\n\r\n  throw new Error(params.user.message.error.auth)\r\n}\r\n\r\n// Delete\r\nexport async function projectRemove({ params: { id }, auth }) {\r\n  if(authCheck(auth)) {\r\n    // Validation rules\r\n    const rules = [\r\n      {\r\n        data: { value: id },\r\n        check: 'notEmpty',\r\n        message: params.common.message.error.invalidData\r\n      }\r\n    ]\r\n\r\n    // Validate\r\n    try {\r\n      validate(rules)\r\n    } catch(error) {\r\n      throw new Error(error.message)\r\n    }\r\n\r\n    try {\r\n      const data = await Project.remove({\r\n        _id: _id,\r\n        userId: auth.user._id\r\n      })\r\n\r\n      return {\r\n        data\r\n      }\r\n    } catch(error) {\r\n      throw new Error(params.common.message.error.server)\r\n    }\r\n  }\r\n\r\n  throw new Error(params.user.message.error.auth)\r\n}\r\n"],"file":"mutation.js"}