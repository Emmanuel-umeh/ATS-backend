{"version":3,"sources":["../../../src/modules/candidate/seeds.js"],"names":["console","log","User","findOne","email","user","Organization","organization","Project","project","Job","job","Interviewer","interviewer","candidates","name","i","Candidate","create","organizationId","_id","projectId","jobId","userId","mobile","experience","resume","salaryCurrent","salaryExpected","candidate","Interview","candidateId","interviewerId","dateTime","mode","params","interview","modes","key","Kanban","interviews","id","status","kanban","columns","highlight"],"mappings":"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","sourcesContent":["// App Imports\r\nimport params from '../../setup/config/params'\r\nimport Organization from '../organization/model'\r\nimport User from '../user/model'\r\nimport Project from '../project/model'\r\nimport Job from '../job/model'\r\nimport Interviewer from '../interviewer/model'\r\nimport Interview from '../interview/model'\r\nimport Kanban from '../kanban/model'\r\nimport Candidate from './model'\r\n\r\n// Seeds\r\nexport default async function () {\r\n  console.log('SEED - Candidate..')\r\n  console.log('SEED - Interview..')\r\n  console.log('SEED - Kanban..')\r\n\r\n  const user = await User.findOne({ email: 'user@hiresmart.app' })\r\n  const organization = await Organization.findOne()\r\n  const project = await Project.findOne()\r\n  const job = await Job.findOne()\r\n  const interviewer = await Interviewer.findOne()\r\n\r\n  const candidates = [\r\n    { name: 'Arun Kumar', email: 'arun@hiresmart.app' },\r\n    { name: 'Rajesh Kumar', email: 'rajesh@hiresmart.app' }\r\n  ]\r\n\r\n  for (let i of [0, 1]) {\r\n    const candidate = await Candidate.create({\r\n      organizationId: organization._id,\r\n      projectId: project._id,\r\n      jobId: job._id,\r\n      userId: user._id,\r\n      name: candidates[i].name,\r\n      email: candidates[i].email,\r\n      mobile: '9876543210',\r\n      experience: '5.5',\r\n      resume: 'resume.pdf',\r\n      salaryCurrent: '10 LPA',\r\n      salaryExpected: '15 LPA'\r\n    })\r\n\r\n    const interview = await Interview.create({\r\n      organizationId: organization._id,\r\n      projectId: project._id,\r\n      candidateId: candidate._id,\r\n      interviewerId: interviewer._id,\r\n      userId: user._id,\r\n      dateTime: '2018-06-01T00:00:00+05:30',\r\n      mode: params.interview.modes[0].key\r\n    })\r\n\r\n    await Kanban.create({\r\n      organizationId: organization._id,\r\n      projectId: project._id,\r\n      candidateId: candidate._id,\r\n      interviews: [interview._id],\r\n      userId: user.id,\r\n      status: params.kanban.columns[0].key,\r\n      highlight: false\r\n    })\r\n  }\r\n}\r\n"],"file":"seeds.js"}