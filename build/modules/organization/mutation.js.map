{"version":3,"sources":["../../../src/modules/organization/mutation.js"],"names":["organizationCreate","params","name","description","domain","auth","rules","data","value","check","message","Error","Organization","create","userId","user","_id","common","error","server","organizationUpdate","id","updateOne","organizationId","$set","organizationRemove","invalidData","remove"],"mappings":"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","sourcesContent":["// App Imports\r\nimport params from '../../setup/config/params'\r\nimport { authCheck } from '../../setup/helpers/utils'\r\nimport validate from '../../setup/helpers/validation'\r\nimport Organization from './model'\r\n\r\n// Create\r\nexport async function organizationCreate({ params: { name, description = '', domain = '' }, auth }) {\r\n  if(authCheck(auth)) {\r\n    // Validation rules\r\n    const rules = [\r\n      {\r\n        data: { value: name },\r\n        check: 'notEmpty',\r\n        message: 'Please enter valid name.'\r\n      }\r\n    ]\r\n\r\n    // Validate\r\n    try {\r\n      validate(rules)\r\n    } catch(error) {\r\n      throw new Error(error.message)\r\n    }\r\n\r\n    try {\r\n      const data = await Organization.create({\r\n        userId: auth.user._id,\r\n        name,\r\n        description,\r\n        domain\r\n      })\r\n\r\n      return {\r\n        data\r\n      }\r\n    } catch(error) {\r\n      throw new Error(params.common.message.error.server)\r\n    }\r\n  }\r\n\r\n  throw new Error(params.user.message.error.auth)\r\n}\r\n\r\n// Update product\r\nexport async function organizationUpdate({ params: { id, name, description = '', domain = '' }, auth }) {\r\n  if(authCheck(auth)) {\r\n    // Validation rules\r\n    const rules = [\r\n      {\r\n        data: { value: name },\r\n        check: 'notEmpty',\r\n        message: 'Please enter valid name.'\r\n      }\r\n    ]\r\n\r\n    // Validate\r\n    try {\r\n      validate(rules)\r\n    } catch(error) {\r\n      throw new Error(error.message)\r\n    }\r\n\r\n    try {\r\n      const data = await Organization.updateOne(\r\n        { _id: auth.user.organizationId },\r\n        {\r\n          $set: { name, description, domain }\r\n        }\r\n      )\r\n\r\n      return {\r\n        data\r\n      }\r\n    } catch(error) {\r\n      throw new Error(params.common.message.error.server)\r\n    }\r\n  }\r\n\r\n  throw new Error(params.user.message.error.auth)\r\n}\r\n\r\n// Delete\r\nexport async function organizationRemove({ params: { id }, auth }) {\r\n  if(authCheck(auth)) {\r\n    // Validation rules\r\n    const rules = [\r\n      {\r\n        data: { value: id },\r\n        check: 'notEmpty',\r\n        message: params.common.message.error.invalidData\r\n      }\r\n    ]\r\n\r\n    // Validate\r\n    try {\r\n      validate(rules)\r\n    } catch(error) {\r\n      throw new Error(error.message)\r\n    }\r\n\r\n    try {\r\n      const data = await Organization.remove({\r\n        _id: _id,\r\n        userId: auth.user._id\r\n      })\r\n\r\n      return {\r\n        data\r\n      }\r\n    } catch(error) {\r\n      throw new Error(params.common.message.error.server)\r\n    }\r\n  }\r\n\r\n  throw new Error(params.user.message.error.auth)\r\n}\r\n"],"file":"mutation.js"}