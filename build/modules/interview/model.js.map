{"version":3,"sources":["../../../src/modules/interview/model.js"],"names":["collection","Schema","mongoose","organizationId","type","Types","ObjectId","required","ref","Organization","index","projectId","Project","candidateId","Candidate","interviewerId","Interviewer","feedbackId","Feedback","userId","User","dateTime","String","Date","mode","note","timestamps","model"],"mappings":";;;;;;;;;AACA;;AAGA;;AACA;;AACA;;AACA;;AACA;;AACA;;AATA;AAGA;AAQA;AACO,IAAMA,UAAU,GAAG,WAAnB,C,CAEP;;;AACA,IAAMC,MAAM,GAAG,IAAIC,qBAASD,MAAb,CAAoB;AACjCE,EAAAA,cAAc,EAAE;AACdC,IAAAA,IAAI,EAAEF,qBAASD,MAAT,CAAgBI,KAAhB,CAAsBC,QADd;AAEdC,IAAAA,QAAQ,EAAE,IAFI;AAGdC,IAAAA,GAAG,EAAEC,iBAHS;AAIdC,IAAAA,KAAK,EAAE;AAJO,GADiB;AAOjCC,EAAAA,SAAS,EAAE;AACTP,IAAAA,IAAI,EAAEF,qBAASD,MAAT,CAAgBI,KAAhB,CAAsBC,QADnB;AAETC,IAAAA,QAAQ,EAAE,IAFD;AAGTC,IAAAA,GAAG,EAAEI,kBAHI;AAITF,IAAAA,KAAK,EAAE;AAJE,GAPsB;AAajCG,EAAAA,WAAW,EAAE;AACXT,IAAAA,IAAI,EAAEF,qBAASD,MAAT,CAAgBI,KAAhB,CAAsBC,QADjB;AAEXC,IAAAA,QAAQ,EAAE,IAFC;AAGXC,IAAAA,GAAG,EAAEM;AAHM,GAboB;AAkBjCC,EAAAA,aAAa,EAAE;AACbX,IAAAA,IAAI,EAAEF,qBAASD,MAAT,CAAgBI,KAAhB,CAAsBC,QADf;AAEbC,IAAAA,QAAQ,EAAE,IAFG;AAGbC,IAAAA,GAAG,EAAEQ;AAHQ,GAlBkB;AAuBjCC,EAAAA,UAAU,EAAE;AACVb,IAAAA,IAAI,EAAEF,qBAASD,MAAT,CAAgBI,KAAhB,CAAsBC,QADlB;AAEVE,IAAAA,GAAG,EAAEU;AAFK,GAvBqB;AA2BjCC,EAAAA,MAAM,EAAE;AACNf,IAAAA,IAAI,EAAEF,qBAASD,MAAT,CAAgBI,KAAhB,CAAsBC,QADtB;AAENC,IAAAA,QAAQ,EAAE,IAFJ;AAGNC,IAAAA,GAAG,EAAEY;AAHC,GA3ByB;AAgCjCC,EAAAA,QAAQ,EAAE;AACRjB,IAAAA,IAAI,EAAEkB,MADE;AAER,eAAS,IAAIC,IAAJ;AAFD,GAhCuB;AAoCjCC,EAAAA,IAAI,EAAE;AACJpB,IAAAA,IAAI,EAAEkB,MADF;AAEJf,IAAAA,QAAQ,EAAE;AAFN,GApC2B;AAwCjCkB,EAAAA,IAAI,EAAE;AACJrB,IAAAA,IAAI,EAAEkB;AADF;AAxC2B,CAApB,EA2CZ;AAACI,EAAAA,UAAU,EAAE;AAAb,CA3CY,CAAf,C,CA6CA;;eACexB,qBAASyB,KAAT,CAAe3B,UAAf,EAA2BC,MAA3B,EAAmCD,UAAnC,C","sourcesContent":["// Imports\r\nimport mongoose from 'mongoose'\r\n\r\n// App Imports\r\nimport { collection as Organization } from '../organization/model'\r\nimport { collection as Project } from '../project/model'\r\nimport { collection as Candidate } from '../candidate/model'\r\nimport { collection as Interviewer } from '../interviewer/model'\r\nimport { collection as Feedback } from '../feedback/model'\r\nimport { collection as User } from '../user/model'\r\n\r\n// Collection name\r\nexport const collection = 'Interview'\r\n\r\n// Schema\r\nconst Schema = new mongoose.Schema({\r\n  organizationId: {\r\n    type: mongoose.Schema.Types.ObjectId,\r\n    required: true,\r\n    ref: Organization,\r\n    index: true\r\n  },\r\n  projectId: {\r\n    type: mongoose.Schema.Types.ObjectId,\r\n    required: true,\r\n    ref: Project,\r\n    index: true\r\n  },\r\n  candidateId: {\r\n    type: mongoose.Schema.Types.ObjectId,\r\n    required: true,\r\n    ref: Candidate\r\n  },\r\n  interviewerId: {\r\n    type: mongoose.Schema.Types.ObjectId,\r\n    required: true,\r\n    ref: Interviewer\r\n  },\r\n  feedbackId: {\r\n    type: mongoose.Schema.Types.ObjectId,\r\n    ref: Feedback\r\n  },\r\n  userId: {\r\n    type: mongoose.Schema.Types.ObjectId,\r\n    required: true,\r\n    ref: User\r\n  },\r\n  dateTime: {\r\n    type: String,\r\n    default: new Date()\r\n  },\r\n  mode: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  note: {\r\n    type: String\r\n  }\r\n}, {timestamps: true})\r\n\r\n// Model\r\nexport default mongoose.model(collection, Schema, collection)\r\n"],"file":"model.js"}