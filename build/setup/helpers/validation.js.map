{"version":3,"sources":["../../../src/setup/helpers/validation.js"],"names":["isEmail","value","re","test","String","toLowerCase","isEmpty","isNotEmpty","isEqual","value1","value2","isLength","length","isLengthMin","isLengthMax","validate","validations","checks","email","empty","notEmpty","equal","lengthMin","lengthMax","v","not","check","data","Error","message"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAEA;AACO,SAASA,OAAT,OAA4B;AAAA,MAATC,KAAS,QAATA,KAAS;AACjC,MAAMC,EAAE,GAAG,yJAAX;AACA,SAAOA,EAAE,CAACC,IAAH,CAAQC,MAAM,CAACH,KAAD,CAAN,CAAcI,WAAd,EAAR,CAAP;AACD;;AAED,SAASC,OAAT,QAA4B;AAAA,MAATL,KAAS,SAATA,KAAS;AAC1B,SAAO,CAACA,KAAR;AACD;;AAED,SAASM,UAAT,QAA+B;AAAA,MAATN,KAAS,SAATA,KAAS;AAC7B,SAAO,CAAC,CAACA,KAAT;AACD,C,CAED;;;AACO,SAASO,OAAT,QAAqC;AAAA,MAAlBC,MAAkB,SAAlBA,MAAkB;AAAA,MAAVC,MAAU,SAAVA,MAAU;AAC1C,SAAOD,MAAM,KAAKC,MAAlB;AACD,C,CAED;;;AACO,SAASC,QAAT,QAAqC;AAAA,MAAjBV,KAAiB,SAAjBA,KAAiB;AAAA,MAAVW,MAAU,SAAVA,MAAU;AAC1C,SAAOX,KAAK,CAACW,MAAN,KAAiBA,MAAxB;AACD,C,CAED;;;AACO,SAASC,WAAT,QAAwC;AAAA,MAAjBZ,KAAiB,SAAjBA,KAAiB;AAAA,MAAVW,MAAU,SAAVA,MAAU;AAC7C,SAAOX,KAAK,CAACW,MAAN,IAAgBA,MAAvB;AACD,C,CAED;;;AACO,SAASE,WAAT,QAAwC;AAAA,MAAjBb,KAAiB,SAAjBA,KAAiB;AAAA,MAAVW,MAAU,SAAVA,MAAU;AAC7C,SAAOX,KAAK,CAACW,MAAN,IAAgBA,MAAvB;AACD,C,CAED;;;AACe,SAASG,QAAT,GAAoC;AAAA,MAAlBC,WAAkB,uEAAJ,EAAI;AACjD,MAAMC,MAAM,GAAG;AACbC,IAAAA,KAAK,EAAElB,OADM;AAEbmB,IAAAA,KAAK,EAAEb,OAFM;AAGbc,IAAAA,QAAQ,EAAEb,UAHG;AAIbc,IAAAA,KAAK,EAAEb,OAJM;AAKbI,IAAAA,MAAM,EAAED,QALK;AAMbW,IAAAA,SAAS,EAAET,WANE;AAObU,IAAAA,SAAS,EAAET;AAPE,GAAf;;AADiD,6CAWpCE,WAXoC;AAAA;;AAAA;AAWjD,wDAA0B;AAAA,UAAlBQ,CAAkB;;AACxB,UAAGA,CAAC,CAACC,GAAF,GAAQR,MAAM,CAACO,CAAC,CAACE,KAAH,CAAN,CAAgBF,CAAC,CAACG,IAAlB,CAAR,GAAkC,CAACV,MAAM,CAACO,CAAC,CAACE,KAAH,CAAN,CAAgBF,CAAC,CAACG,IAAlB,CAAtC,EAA+D;AAC7D,cAAM,IAAIC,KAAJ,CAAUJ,CAAC,CAACK,OAAZ,CAAN;AACD;AACF;AAfgD;AAAA;AAAA;AAAA;AAAA;AAgBlD","sourcesContent":["// Validation methods\r\n\r\n// Email\r\nexport function isEmail({ value }) {\r\n  const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n  return re.test(String(value).toLowerCase())\r\n}\r\n\r\nfunction isEmpty({ value }) {\r\n  return !value\r\n}\r\n\r\nfunction isNotEmpty({ value }) {\r\n  return !!value\r\n}\r\n\r\n// Equal\r\nexport function isEqual({ value1, value2 }) {\r\n  return value1 === value2\r\n}\r\n\r\n// Length\r\nexport function isLength({ value, length }) {\r\n  return value.length === length\r\n}\r\n\r\n// Length minimum\r\nexport function isLengthMin({ value, length }) {\r\n  return value.length >= length\r\n}\r\n\r\n// Length maximum\r\nexport function isLengthMax({ value, length }) {\r\n  return value.length <= length\r\n}\r\n\r\n// Validation\r\nexport default function validate(validations = []) {\r\n  const checks = {\r\n    email: isEmail,\r\n    empty: isEmpty,\r\n    notEmpty: isNotEmpty,\r\n    equal: isEqual,\r\n    length: isLength,\r\n    lengthMin: isLengthMin,\r\n    lengthMax: isLengthMax,\r\n  }\r\n\r\n  for(let v of validations) {\r\n    if(v.not ? checks[v.check](v.data) : !checks[v.check](v.data)) {\r\n      throw new Error(v.message)\r\n    }\r\n  }\r\n}\r\n"],"file":"validation.js"}