{"version":3,"sources":["../../../src/setup/server/endpoint.js"],"names":["server","console","info","all","params","endpoint","url","authentication","language","request","response","result","success","message","data","body","operation","modules","fields","auth","common","undefined","NODE_ENV","log","send"],"mappings":";;;;;;;;;;;;;AACA;;AACA;;AACA;;AACA;;AACA;;AALA;AAOA;AACe,kBAAUA,MAAV,EAAkB;AAC/BC,EAAAA,OAAO,CAACC,IAAR,CAAa,oBAAb,EAD+B,CAG/B;;AACAF,EAAAA,MAAM,CAACG,GAAP,CAAWC,mBAAOC,QAAP,CAAgBC,GAA3B,EAAgC,CAACC,0BAAD,EAAiBC,oBAAjB,CAAhC;AAAA,6FAA4D,iBAAOC,OAAP,EAAgBC,QAAhB;AAAA;;AAAA;AAAA;AAAA;AAAA;AACtDC,cAAAA,MADsD,GAC7C;AACXC,gBAAAA,OAAO,EAAE,KADE;AAEXC,gBAAAA,OAAO,EAAE,mBAFE;AAGXC,gBAAAA,IAAI,EAAE;AAHK,eAD6C,EAO1D;;AAP0D,mBAQvDL,OAAO,CAACM,IAAR,CAAaC,SAR0C;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,qBAYkCC,oBAAQR,OAAO,CAACM,IAAR,CAAaC,SAArB,EAAgC;AACtHZ,gBAAAA,MAAM,EAAEK,OAAO,CAACM,IAAR,CAAaX,MAAb,IAAuB,EADuF;AAEtHc,gBAAAA,MAAM,EAAET,OAAO,CAACM,IAAR,CAAaG,MAAb,IAAuB,EAFuF;AAGtHC,gBAAAA,IAAI,EAAEV,OAAO,CAACU;AAHwG,eAAhC,CAZlC;;AAAA;AAAA;AAAA,6DAY9CP,OAZ8C;AAY9CA,cAAAA,OAZ8C,uCAYpC,IAZoC;AAY9BE,cAAAA,IAZ8B,yBAY9BA,IAZ8B;AAAA,6DAYxBD,OAZwB;AAYxBA,cAAAA,OAZwB,uCAYdT,mBAAOgB,MAAP,CAAcP,OAAd,CAAsBD,OAAtB,WAZc;AAkBtD;AACAD,cAAAA,MAAM,CAACC,OAAP,GAAiBA,OAAjB;AACAD,cAAAA,MAAM,CAACG,IAAP,GAAcA,IAAd;AACAH,cAAAA,MAAM,CAACE,OAAP,GAAiBA,OAAjB;AArBsD;AAAA;;AAAA;AAAA;AAAA;AAuBtDF,cAAAA,MAAM,CAACE,OAAP,GAAiBI,oBAAQR,OAAO,CAACM,IAAR,CAAaC,SAArB,MAAoCK,SAApC,aAAoDZ,OAAO,CAACM,IAAR,CAAaC,SAAjE,oCAA4G,YAAMH,OAAnI;;AAvBsD;AA2B1D;AACA,kBAAGS,kBAAa,aAAhB,EAA+B;AAC7BrB,gBAAAA,OAAO,CAACsB,GAAR,CAAYd,OAAO,CAACM,IAApB;AACAd,gBAAAA,OAAO,CAACsB,GAAR,CAAYZ,MAAM,CAACC,OAAnB,EAA4BD,MAAM,CAACE,OAAnC;AACD,eA/ByD,CAiC1D;;;AACAH,cAAAA,QAAQ,CAACc,IAAT,CAAcb,MAAd;;AAlC0D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA5D;;AAAA;AAAA;AAAA;AAAA;AAoCD","sourcesContent":["// App Imports\r\nimport { NODE_ENV } from '../config/env'\r\nimport params from '../config/params'\r\nimport authentication from './authentication'\r\nimport language from './language'\r\nimport modules from './modules'\r\n\r\n// Setup endpoint\r\nexport default function (server) {\r\n  console.info('SETUP - Endpoint..')\r\n\r\n  // API endpoint\r\n  server.all(params.endpoint.url, [authentication, language], async (request, response) => {\r\n    let result = {\r\n      success: false,\r\n      message: 'Please try again.',\r\n      data: null\r\n    }\r\n\r\n    // Check if operation to be called is set\r\n    if(request.body.operation) {\r\n      try {\r\n        // Execute operation\r\n        // operationName({ params, fields, auth })\r\n        const { success = true, data, message = params.common.message.success.default } = await modules[request.body.operation]({\r\n          params: request.body.params || {},\r\n          fields: request.body.fields || {},\r\n          auth: request.auth\r\n        })\r\n\r\n        // Operation executed successfully\r\n        result.success = success\r\n        result.data = data\r\n        result.message = message\r\n      } catch (error) {\r\n        result.message = modules[request.body.operation] === undefined ? `${ request.body.operation } operation is not available.` : error.message\r\n      }\r\n    }\r\n\r\n    // Log info in development mode\r\n    if(NODE_ENV === 'development') {\r\n      console.log(request.body)\r\n      console.log(result.success, result.message)\r\n    }\r\n\r\n    // Send response\r\n    response.send(result)\r\n  })\r\n}\r\n"],"file":"endpoint.js"}